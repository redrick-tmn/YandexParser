@{
    ViewBag.Title = "Queries";
    Layout = "~/Views/Shared/_Layout.cshtml";
}

<script type="text/javascript">
    $(function () {
        Array.max = function (array) {
            return Math.max.apply(Math, array);
        };

        Array.min = function (array) {
            return Math.min.apply(Math, array);
        };

        $('#show').click(function () {
            $('#results').tableGen('reload', {
                filter: function (v) {
                    var posFrom = parseInt($('#posFrom').val());
                    var posTo = parseInt($('#posTo').val());
                    
                    var posFromErr = '', posToErr = '', posToClass = '', posFromClass = '';
                    if ($('#posFrom').val() != '' && isNaN(posFrom)){
                        posFromErr = 'Incorrect number';
                        posFromClass = 'error';
                    }
                    if ($('#posTo').val() != '' && isNaN(posTo)) {
                        posToErr = 'Incorrect number';
                        posToClass = 'error';
                    }

                    $('#posFrom, #posTo').parent().parent().removeClass('error');

                    $('#posFrom').parent().parent().addClass(posFromClass);
                    $('#posTo').parent().parent().addClass(posToClass);


                    $('.help-inline', $('#posFrom').parent()).text(posFromErr);
                    $('.help-inline', $('#posTo').parent()).text(posToErr);

                    var query = $('#queryText').val();
                    if (query) {
                        if (v.QueryText.toLowerCase().indexOf(query.toLowerCase()) === -1)
                            return false;
                    }

                    if (!isNaN(posFrom)) {
                        if (v.Position < posFrom)
                            return false;
                    }
                    if (!isNaN(posTo)) {
                        if (v.Position > posTo)
                            return false;
                    }
                    return true;
                }
            });
        });

        $.ajax({
            method: 'post',
            dataType: 'json',
            url: 'QueriesJson',
            success: function (data) {
                var positions = $.map(data, function (e) { return e.Position; });
                var maxPos = Math.max.apply(Math, positions);
                var minPos = Math.min.apply(Math, positions);
                $('#posFrom, #posTo').attr('max', maxPos).attr('min', minPos);
                $('#results').tableGen({
                    data: data,
                    title: $('#title').removeClass('hidden'),
                    columns: {
                        Id : {
                            visible: false
                        },
                        QueryText: {
                            visible: true,
                            title: 'Query',
                            sort: function (a, b) {
                                if (a.QueryText < b.QueryText) return -1;
                                else if (a.QueryText > b.QueryText) return 1;
                                else return 0;
                            }
                        },
                        Position: {
                            visible: true,
                            sort: function (a, b) {
                                if (a.Position < b.Position) return -1;
                                else if (a.Position > b.Position) return 1;
                                else return 0;
                            }
                        },
                        Url: {
                            visible: true,
                            parse: function (value) {
                                return $('<a>', {
                                    href: value
                                }).append(value);
                            },
                            sort: function (a, b) {
                                if (a.Url < b.Url) return -1;
                                else if (a.Url > b.Url) return 1;
                                else return 0;
                            }
                        },
                        Title: {
                            visible: true,
                            sort: function (a, b) {
                                if (a.Title < b.Title) return -1;
                                else if (a.Title > b.Title) return 1;
                                else return 0;
                            }
                        },
                        Date: {
                            visible: true,
                            style: 'white-space: nowrap;',
                            parse: function (value) {
                                //spike for dateTime
                                value = new Date(parseInt(value.replace("/Date(", "").replace(")/",""), 10));
                                return value.toLocaleString();
                            },
                            sort: function(a, b) {
                                if (a.Date < b.Date) return -1;
                                else if (a.Date > b.Date) return 1;
                                else return 0;
                            }
                        }
                    }
                });
            }
        });
    });
</script>

<div id="title" class="hidden">
    <h2>Queries</h2>
    <form class="form-horizontal text-left" id="filter-form" >
        <div class="control-group">
          <label class="control-label" for="queryText">Query text:</label>
          <div class="controls">
            <input type="text" id="queryText" class="input-xlarge"/>
            <span class="help-inline"></span>
          </div>
        </div>
        <div class="control-group">
          <label class="control-label" for="posFrom">Postion from:</label>
          <div class="controls">
            <input type="number" id="posFrom" class="input-xlarge"/>
            <span class="help-inline"></span>
          </div>
        </div>
        <div class="control-group">
            <label class="control-label" for="posTo">Position to:</label>
              <div class="controls">
                <input type="number" id="posTo" class="input-xlarge" />
                 <span class="help-inline"></span>
              </div>
        </div>
        <div class="control-group">
             <div class="controls">
                 <button type="button" class="btn btn-success" id="show"><i class="icon-filter icon-large"></i> Show</button>
            </div>
        </div>
    </form>
</div>

<div id="results"></div>
